{"version":3,"sources":["webpack:///./src/templates/blogPost.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","Template","props","console","log","data","pageContext","markdownRemark","title","frontmatter","html","nextNode","prevNode","a","createElement","style","fontFamily","className","dangerouslySetInnerHTML","__html","to","path","m","module","exports","require","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","render","finalData","Fragment","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","location","pageResources","InternalPageRenderer","Object","assign","json","shape","pathname"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAyBaI,EAAK,YAWHK,UAjCE,SAAAC,GACfC,QAAQC,IAAIF,GADY,IAEhBG,EAAsBH,EAAtBG,KAAMC,EAAgBJ,EAAhBI,YACNC,EAAmBF,EAAnBE,eACAC,EAAUD,EAAeE,YAAzBD,MACAE,EAASH,EAATG,KAEAC,EAAuBL,EAAvBK,SAAUC,EAAaN,EAAbM,SAElB,OACEd,EAAAe,EAAAC,cAAA,WACEhB,EAAAe,EAAAC,cAAA,MAAIC,MAAO,CAAEC,WAAY,WAAaR,GACtCV,EAAAe,EAAAC,cAAA,OAAKG,UAAU,WAAWC,wBAAyB,CAAEC,OAAQT,KAC5DC,GAAYb,EAAAe,EAAAC,cAACd,EAAA,EAAD,CAAMoB,GAAIT,EAASF,YAAYY,MAA/B,QACZT,GAAYd,EAAAe,EAAAC,cAACd,EAAA,EAAD,CAAMoB,GAAIR,EAASH,YAAYY,MAA/B,+BCjBnB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAC,SAAaA,oCCA/C9B,EAAAG,EAAAD,EAAA,sBAAAgC,IAAA,IAAA7B,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAA8B,EAAAnC,EAAA,GAAAoC,EAAApC,EAAAO,EAAA4B,GAAAE,EAAArC,EAAA,IAAAsC,EAAAtC,EAAAO,EAAA8B,GAAArC,EAAAG,EAAAD,EAAA,sBAAAoC,EAAAjB,IAAArB,EAAA,SAaMuC,EAAqBC,IAAMC,cAAc,IAE/C,SAASC,EAATC,GAA2E,IAAxCC,EAAwCD,EAAxCC,gBAAiB/B,EAAuB8B,EAAvB9B,KAAMT,EAAiBuC,EAAjBvC,MAAOyC,EAAUF,EAAVE,OACzDC,EAAYjC,EACdA,EAAKA,KACL+B,EAAgBxC,IAAUwC,EAAgBxC,GAAOS,KAErD,OACEP,EAAAe,EAAAC,cAAChB,EAAAe,EAAM0B,SAAP,KACGD,GAAaD,EAAOC,IACnBA,GAAaxC,EAAAe,EAAAC,cAAA,qCAKrB,IAAMY,EAAc,SAAAxB,GAAS,IACnBG,EAAkCH,EAAlCG,KAAMT,EAA4BM,EAA5BN,MAAOyC,EAAqBnC,EAArBmC,OAAQG,EAAatC,EAAbsC,SAE7B,OACE1C,EAAAe,EAAAC,cAACiB,EAAmBU,SAApB,KACG,SAAAL,GAAe,OACdtC,EAAAe,EAAAC,cAACoB,EAAD,CACE7B,KAAMA,EACNT,MAAOA,EACPyC,OAAQA,GAAUG,EAClBJ,gBAAiBA,OA6B3BV,EAAYgB,UAAY,CACtBrC,KAAMsC,IAAUC,OAChBhD,MAAO+C,IAAUE,OAAOC,WACxBT,OAAQM,IAAUI,KAClBP,SAAUG,IAAUI,iGClEhBC,EAAmB,SAAAb,GAAiC,IAA9Bc,EAA8Bd,EAA9Bc,SAAUC,EAAoBf,EAApBe,cACpC,OAAKA,EAGElB,IAAMlB,cAAcqC,IAApBC,OAAAC,OAAA,CACLJ,WACAC,iBACGA,EAAcI,OALV,MASXN,EAAiBN,UAAY,CAC3BO,SAAUN,IAAUY,MAAM,CACxBC,SAAUb,IAAUE,OAAOC,aAC1BA,YAGUE","file":"component---src-templates-blog-post-js-15391a4a7bbc55b3a60c.js","sourcesContent":["import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\n\nconst Template = props => {\n  console.log(props)\n  const { data, pageContext } = props\n  const { markdownRemark } = data\n  const { title } = markdownRemark.frontmatter\n  const { html } = markdownRemark\n\n  const { nextNode, prevNode } = pageContext\n\n  return (\n    <div>\n      <h1 style={{ fontFamily: \"avenir\" }}>{title}</h1>\n      <div className=\"blogpost\" dangerouslySetInnerHTML={{ __html: html }} />\n      {nextNode && <Link to={nextNode.frontmatter.path}>Next</Link>}\n      {prevNode && <Link to={prevNode.frontmatter.path}>Prev</Link>}\n    </div>\n  )\n}\n\n// NOTE: query result AUTOMATICALLY PASSED to component(Template)\n// as props.data\n// $pathSlug automatically get from \"props.context\" from createPage()\nexport const query = graphql`\n  query($pathSlug: String!) {\n    markdownRemark(frontmatter: { path: { eq: $pathSlug } }) {\n      html\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n\nexport default Template\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}